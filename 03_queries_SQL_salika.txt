1)

What query would you run to get all the customers inside city_id = 312? Your query should return customer first name, last name, email, and address.


SELECT city.city_id, first_name, last_name, email, address.address FROM customer
JOIN address ON customer.address_id = address.address_id
JOIN city ON address.city_id = city.city_id
WHERE city.city_id = 312



2) What query would you run to get all comedy films? Your query should return film title, description, release year, rating, special features, and genre.

SELECT film.film_id, title, description, release_year, rating, special_features, category.name as genre FROM film
JOIN film_category ON film.film_id = film_category.film_id
JOIN category ON film_category.category_id = category.category_id
WHERE category.name = 'Comedy'

3) What query would you run to get all the films joined by actor_id=5? Your query should return the film title, description, and release year.

// Comment(3): I am sure you noticed this in your SQL statement but missing a comma between actor_id and title

SELECT actor.actor_id title, description, release_year, actor.first_name FROM film
JOIN film_actor ON film.film_id = film_actor.film_id
JOIN actor ON film_actor.actor_id = actor.actor_id
WHERE actor.actor_id = 5


4) What query would you run to get all the customers in store_id = 1 and inside these cities (1, 42, 312 and 459)? Your query should return customer first name, last name, email, and address.


SELECT customer.store_id, customer.first_name, customer.last_name, customer.email, address.address, city.city_id FROM customer
JOIN address ON customer.address_id = address.address_id
JOIN city ON address.city_id = city.city_id
WHERE city.city_id = 1 OR city.city_id = 42 OR city.city_id = 312 OR city.city_id = 459 AND customer.store_id = 1

//comment(4): This one is very close but needs to be tweeked. Line 34 you are chaining all of these OR statements but then ending the last one with an AND. if you run this, you will get 6 results. This is because that last AND statement is only being applied to the last OR for 459. one way you can get around this is to do an OR/AND combination for each city ID, but this gets long. Another way to handle this is to use a Where IN grouping. WHERE city.city_id IN (1,42,312, 459) AND customer.store_id = 1; This will only select from the city_id for the information listed.


5) What query would you run to get all the films with a "rating = G" and "special feature = behind the scenes", joined by actor_id = 15? Your query should return the film title, description, release year, rate, and special feature. Hint: You may use LIKE function in getting the 'behind the scenes' part.


SELECT title, description, release_year, rating, special_features, film_actor.actor_id FROM film
JOIN film_actor ON film.film_id = film_actor.film_id
WHERE film_actor.actor_id = 15 AND film.rating = 'g' AND film.special_features LIKE '%behind the scenes%'


6) What query would you run to get all the actors that joined in the film_id = 369? Your query should return the film_id, title, actor_id, and actor_name.

SELECT film.film_id, title, film_actor.actor_id, CONCAT(actor.first_name, ' ', actor.last_name) as name FROM film
JOIN film_actor ON film.film_id = film_actor.film_id
JOIN actor ON film_actor.actor_id = actor.actor_id
WHERE film.film_id = 369

7) What query would you run to get all drama films with a rental rate of 2.99? Your query should return film title, description, release year, rating, special features, and genre.


SELECT film.film_id, description, release_year, rating, special_features, film.rental_rate, category.name as genre FROM film
JOIN film_category ON film.film_id = film_category.film_id
JOIN category ON film_category.category_id = category.category_id
WHERE film.rental_rate = '2.99' AND category.name = 'Drama'

8) What query would you run to get all the action films joined by SANDRA KILMER. Your query should return film title, description, release year, rating, special features, genre and actor's first name and last name.

SELECT film_actor.actor_id, CONCAT(actor.first_name, ' ', actor.last_name) as actor, category.name as genre, title, description, release_year,rating, special_features FROM film
JOIN film_actor ON film.film_id = film_actor.film_id
JOIN actor ON film_actor.actor_id = actor.actor_id
JOIN film_category on film.film_id = film_category.film_id
JOIN category ON film_category.category_id = category.category_id
WHERE actor.first_name LIKE 'Sandra' AND actor.last_name LIKE 'Kilmer' AND category.name = 'Action'
